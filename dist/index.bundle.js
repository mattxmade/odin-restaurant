"use strict";(self.webpackChunkodin_restaurant=self.webpackChunkodin_restaurant||[]).push([[826],{426:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(537),o=n.n(a),i=n(645),s=n.n(i)()(o());s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Lobster&family=Yanone+Kaffeesatz&display=swap);"]),s.push([e.id,'* {\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  font-size: 62.5%;\n  --home-bg-main: #56267d;\n  --home-bg-light: #6a3584;\n}\n\nhtml {\n  min-height: 100vh;\n}\n\nbody {\n  font-size: 1.6rem;\n}\n\nmain {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: relative;\n}\n\nmain ul {\n  padding: 2rem 2rem 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  list-style: none;\n  top: 0;\n  z-index: 4;\n  position: -webkit-sticky;\n  position: sticky;\n  background-color: white;\n  box-shadow: 0 0.2rem 0.4rem -0.3rem black;\n}\n\nmain ul li {\n  padding: 1rem;\n  border-radius: 1rem;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  background-color: white;\n  text-align: center;\n  font-size: 1.7rem;\n}\n\nh1, li {\n  font-family: "Lobster", cursive;\n}\n\np {\n  margin: 0.5rem 1rem 0;\n  font-size: 2.1rem;\n  word-spacing: 0.1rem;\n  letter-spacing: 0.05rem;\n  line-height: 2.3rem;\n  text-align: justify;\n  font-family: "Yanone Kaffeesatz", sans-serif;\n}\n\n.home-tab {\n  align-self: center;\n  min-height: 75rem;\n  gap: 2rem;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  max-width: 100rem;\n  margin: 2rem 2rem 2rem;\n  padding: 2rem;\n  border-radius: 0 0 2rem 2rem;\n  box-shadow: 0 0.2rem 0.4rem -0.2rem black;\n  background-color: whitesmoke;\n  padding: 2rem;\n  overflow: hidden;\n}\n\n.contact-page .home-tab h1,\n.home-tab p {\n  z-index: 1;\n}\n\n.hero-image {\n  width: auto;\n  height: auto;\n  position: relative;\n  background-color: white;\n  border-radius: 100%;\n  box-shadow: inset 0 0.2rem 0.4rem -0.1rem black;\n}/*# sourceMappingURL=style.css.map */',"",{version:3,sources:["webpack://./src/style.scss","webpack://./src/style.css"],names:[],mappings:"AASA;EACE,SAAA;EACA,UAAA;ACPF;;ADWA;EACE,gBAAA;EAEA,uBAAA;EACA,wBAAA;ACTF;;ADYA;EACE,iBAAA;ACTF;;ADYA;EAEE,iBAAA;ACVF;;ADaA;EAEE,aAAA;EACA,sBAAA;EACA,uBAAA;EAGA,kBAAA;ACbF;;ADgBA;EACE,oBAAA;EACA,aAAA;EACA,mBAAA;EACA,6BAAA;EACA,gBAAA;EAEA,MAAA;EACA,UAAA;EACA,wBAAA;EAAA,gBAAA;EAEA,uBAAA;EACA,yCAAA;ACfF;;ADkBA;EAGE,aAAA;EACA,mBAAA;EACA,4BAAA;EACA,6BAAA;EACA,uBAAA;EACA,kBAAA;EACA,iBAAA;ACjBF;;ADqBA;EACE,+BAAA;AClBF;;ADqBA;EACE,qBAAA;EACA,iBAAA;EACA,oBAAA;EACA,uBAAA;EACA,mBAAA;EACA,mBAAA;EACA,4CAAA;AClBF;;ADqBA;EACE,kBAAA;EACA,iBAAA;EACA,SAAA;EACA,aAAA;EACA,mBAAA;EACA,sBAAA;EAGA,iBAAA;EACA,sBAAA;EACA,aAAA;EACA,4BAAA;EACA,yCAAA;EACA,4BAAA;EAGA,aAAA;EACA,gBAAA;ACtBF;;ADmCA;;EAIE,UAAA;AClCF;;ADqCA;EACE,WAAA;EACA,YAAA;EACA,kBAAA;EAEA,uBAAA;EAEA,mBAAA;EACA,+CAAA;ACpCF,CAAA,oCAAA",sourceRoot:""}]);const r=s},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(a)for(var r=0;r<this.length;r++){var A=this[r][0];null!=A&&(s[A]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);a&&s[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(o," */"),s=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(s).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var i={},s=[],r=0;r<e.length;r++){var A=e[r],c=a.base?A[0]+a.base:A[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var u=n(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=o(p,a);a.byIndex=r,t.splice(r,0,{identifier:d,updater:m,references:1})}s.push(d)}return s}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=a(e=e||[],o=o||{});return function(e){e=e||[];for(var s=0;s<i.length;s++){var r=n(i[s]);t[r].references--}for(var A=a(e,o),c=0;c<i.length;c++){var l=n(i[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=A}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,o&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},661:(e,t,n)=>{var a=n(379),o=n.n(a),i=n(795),s=n.n(i),r=n(569),A=n.n(r),c=n(565),l=n.n(c),d=n(216),u=n.n(d),p=n(589),m=n.n(p),b=n(426),h={};function f(){const e=document.createElement("div");e.className="home-tab";const t=document.createElement("img");t.className="hero-image",e.append(t);const n=document.createElement("h1");n.className="hero-title",n.textContent="Welcome to Joe's Pizza!",e.appendChild(n);const a=document.createElement("p");a.className="hero-blurb",a.textContent="Cupcake ipsum dolor sit amet caramels candy canes. Bonbon macaroon pudding marshmallow apple pie.";const o=document.createElement("p");return o.className="hero-blurb",o.textContent="Chocolate cake icing sesame snaps bonbon powder caramels gingerbread. Tiramisu candy canes marzipan cotton candy chupa chups pie. Lemon drops cheesecake bear claw cotton candy tart. Cake pie carrot cake ice cream gummi bears. Muffin pudding marshmallow danish sugar plum marzipan. Lemon drops powder gummies toffee soufflé cheesecake topping jelly-o sugar plum. Gummi bears gummi bears cake toffee pudding dessert. Croissant marzipan brownie fruitcake ice cream. Ice cream cheesecake cheesecake toffee biscuit. Dessert jelly topping gummies jelly toffee gummi bears. Soufflé cheesecake gummi bears carrot cake donut chocolate bar donut lollipop. Cheesecake sweet roll chocolate shortbread jelly bonbon bonbon chocolate bar cheesecake.",e.appendChild(a),e.appendChild(o),{tab:e,img:t,h1:n,content_p1:a,content_p2:o}}h.styleTagTransform=m(),h.setAttributes=l(),h.insert=A().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=u(),o()(b.Z,h),b.Z&&b.Z.locals&&b.Z.locals,n.p;const y=n.p+"joes_pizza.webp";window.onload=()=>{const e=document.querySelector("body"),t=document.createElement("div"),n=document.createElement("main");e.appendChild(t),t.appendChild(n);const a=document.createElement("ul");n.appendChild(a);const o=[];for(let e=0;e<3;e++){let t=document.createElement("li");switch(t.style.cursor="pointer",e){case 0:t.textContent="Home";break;case 1:t.textContent="Menu";break;case 2:t.textContent="Delievery"}o.push(t),a.appendChild(t)}const i=f(),s=f(),r=f();i.tab.classList.add("home-page"),s.tab.classList.add("menu-page"),r.tab.classList.add("contact-page"),i.img.src=y,s.tab.style.backgroundColor="white",r.tab.style.backgroundColor="lightblue",n.appendChild(i.tab),n.appendChild(s.tab),n.appendChild(r.tab),i.tab.style.zIndex=1,s.tab.style.zIndex=0,s.tab.style.position="absolute",s.tab.style.visibility="hidden",r.tab.style.zIndex=0,r.tab.style.position="absolute",r.tab.style.visibility="hidden",s.h1.textContent="Menu",r.h1.textContent="Delievery",o.forEach(((e,t)=>{e.addEventListener("click",(t=>{switch(console.log(e.textContent),e.textContent){case"Home":i.tab.style.zIndex=1,i.tab.style.position="relative",i.tab.style.visibility="visible",s.tab.style.zIndex=0,s.tab.style.position="absolute",s.tab.style.visibility="hidden",r.tab.style.zIndex=0,r.tab.style.position="absolute",r.tab.style.visibility="hidden";break;case"Menu":s.tab.style.zIndex=1,s.tab.style.position="relative",s.tab.style.visibility="visible",i.tab.style.zIndex=0,i.tab.style.position="absolute",i.tab.style.visibility="hidden",r.tab.style.zIndex=0,r.tab.style.position="absolute",r.tab.style.visibility="hidden";break;case"Delievery":r.tab.style.zIndex=1,r.tab.style.position="relative",r.tab.style.visibility="visible",i.tab.style.zIndex=0,i.tab.style.position="absolute",i.tab.style.visibility="hidden",s.tab.style.zIndex=0,s.tab.style.position="absolute",s.tab.style.visibility="hidden"}}))}))}}},e=>{e(e.s=661)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,